(function() {var type_impls = {
"l2math":[],
"libtrig":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu2%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/libtrig/morenums/u2/impls.rs.html#97-103\">source</a><a href=\"#impl-From%3Cu2%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"libtrig/struct.u2.html\" title=\"struct libtrig::u2\">u2</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libtrig/morenums/u2/impls.rs.html#100-102\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(u: <a class=\"struct\" href=\"libtrig/struct.u2.html\" title=\"struct libtrig::u2\">u2</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u2>","libtrig::Int"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu3%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/libtrig/morenums/u3/impls.rs.html#105-111\">source</a><a href=\"#impl-From%3Cu3%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"libtrig/struct.u3.html\" title=\"struct libtrig::u3\">u3</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libtrig/morenums/u3/impls.rs.html#108-110\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(u: <a class=\"struct\" href=\"libtrig/struct.u3.html\" title=\"struct libtrig::u3\">u3</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u3>","libtrig::Int"],["<section id=\"impl-Number-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/libtrig/traits/impls.rs.html#6\">source</a><a href=\"#impl-Number-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"libtrig/prelude/trait.Number.html\" title=\"trait libtrig::prelude::Number\">Number</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.i32.html\">i32</a></h3></section>","Number","libtrig::Int"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()